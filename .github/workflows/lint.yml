name: Code Quality

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  quality:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Detect package manager
        id: detect-pm
        run: |
          if [ -f "yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=yarn install --frozen-lockfile" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
          elif [ -f "pnpm-lock.yaml" ]; then
            echo "manager=pnpm" >> $GITHUB_OUTPUT
            echo "command=pnpm install --frozen-lockfile" >> $GITHUB_OUTPUT
            echo "runner=pnpm" >> $GITHUB_OUTPUT
          elif [ -f "package-lock.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=npm ci" >> $GITHUB_OUTPUT
            echo "runner=npm run" >> $GITHUB_OUTPUT
          else
            echo "‚ùå No lock file found!"
            echo "Please commit a lock file to ensure reproducible builds:"
            echo "  - For npm: commit package-lock.json (run 'npm install')"
            echo "  - For yarn: commit yarn.lock (run 'yarn install')"
            echo "  - For pnpm: commit pnpm-lock.yaml (run 'pnpm install')"
            echo ""
            echo "This ensures all developers and CI use the same dependency versions."
            exit 1
          fi

      - name: Setup package manager cache
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: ${{ steps.detect-pm.outputs.manager }}

      - name: Install dependencies
        run: ${{ steps.detect-pm.outputs.command }}

      - name: Run TypeScript check
        run: npx tsc --noEmit

      - name: Run Prettier check
        run: ${{ steps.detect-pm.outputs.runner }} format:check

      - name: Build library
        run: ${{ steps.detect-pm.outputs.runner }} library:build

      - name: Verify library build
        run: ${{ steps.detect-pm.outputs.runner }} library:verify
